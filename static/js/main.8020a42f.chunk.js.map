{"version":3,"sources":["d3.js","d3Comp.js","App.js","serviceWorker.js","index.js"],"names":["PieHue","data","Object","classCallCheck","this","rad","gap","inner","outer","iterations","count","arrayShuffle","categories","createCategories","placement","reduce","acc","d","c","String","category","total","entries","entry","theta0","cat","p","t0","t1","Math","PI","r0","r1","rr","d3","pr","sqrt","tgap","theta","x","cos","y","sin","max_place","length","num_place","rc","i","min","place","j","dx","dy","dr","fx","fy","rx","ry","ff","ffx","ffy","tt","atan2","width","_ref","_ref$showLabels","showLabels","R","cx","cy","innerRadius","attr","selectAll","enter","append","hue","transition","drawArc","outerRadius","startAngle","endAngle","arcs","each","centroid","text","D3Comp","_this","push","plot","d3Plot","draw","interval","setInterval","force","react_default","a","createElement","id","React","Component","App","className","d3Comp","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8020a42f.chunk.js","sourcesContent":["import * as d3 from 'd3'\n\nimport arrayShuffle from 'array-shuffle'\n\nclass PieHue {\n\n    constructor (data) {\n\n        this.rad = 0.017\n        this.gap = 0.03\n        this.inner = 0.6\n        this.outer = 1.0\n        this.iterations = 100\n        this.count = 0\n\n        this.data = arrayShuffle(data)\n        this.categories = this.createCategories(this.gap, this.data)\n        this.placement(this.data, this.categories)\n\n    }\n\n    createCategories (gap, data) {\n        let categories = data.reduce((acc, d) => {\n            let c = String(d.category)\n            if (c in acc) acc[c].count += 1\n            else acc[c] = { count: 1 }\n            return acc\n        }, {})\n\n        let array = Object.entries(categories)\n        let total = array.reduce((acc, entry) => {\n            return acc + entry[1].count\n        }, 0)\n\n        let theta0 = 0\n        for (let cat in categories) {\n            let p = (categories[cat].count / total)\n            categories[cat].t0 = theta0\n            categories[cat].t1 = theta0 + 2*Math.PI*(p-gap)\n\n            theta0 = theta0 + 2*Math.PI*(p)\n        }\n\n        return categories\n    }\n\n    place (t0, t1) {\n        let r0 = this.inner\n        let r1 = this.outer - this.rad\n        let rr = d3.randomUniform(0, 1)()\n        let pr = Math.sqrt(rr*(r1*r1-r0*r0) + r0*r0)\n        let tgap = this.rad/pr\n        let theta =  d3.randomUniform(t0+tgap, t1-tgap)()\n        let x = 1 + pr * Math.cos(theta)\n        let y = 1 + pr * Math.sin(theta)\n        return { x, y }\n    }\n\n    placement (data, categories) {\n\n        let max_place = data.length\n        let num_place = 0\n        let rc = this.rad*1.5\n        for (let i=0; i<data.length; i++) {\n\n            let cat = String(data[i].category)\n            let t0 = categories[cat].t0\n            let t1 = categories[cat].t1\n\n            let min = 0\n            let p = this.place(t0, t1)\n\n            while (min < rc && num_place < max_place) {\n\n                min = 2*rc\n                for (let j=0; j<i; j++) {\n                    let dx = p.x - data[j].x\n                    let dy = p.y - data[j].y\n                    let dr = Math.sqrt(dx*dx + dy*dy)\n                    min = Math.min(min, dr)\n                }\n\n                if (min < rc) {\n                    p = this.place(t0, t1)\n                    num_place += 1\n                }\n\n            }\n\n            data[i].x = p.x\n            data[i].y = p.y\n        }\n    }\n\n\n    force () {\n\n        let data = this.data\n        let categories = this.categories\n        let fx = []\n        let fy = []\n        let rc = 3*this.rad\n        let aij = 0.01\n\n        let r0 = this.inner\n        let r1 = this.outer - this.rad\n\n        for (let i=0; i<data.length; i++) {\n            fx[i] = 0\n            fy[i] = 0\n        }\n\n        for (let i=0; i<data.length; i++) {\n            for (let j=i+1; j<data.length; j++) {\n\n                let rx = data[i].x - data[j].x\n                let ry = data[i].y - data[j].y\n                let rr = Math.sqrt(rx*rx + ry*ry)\n\n                if (rr < rc) {\n                    let ff = aij*(1 - rr/rc)\n                    let ffx = ff*rx/rr\n                    let ffy = ff*ry/rr\n                    fx[i] += ffx\n                    fy[i] += ffy\n                    fx[j] -= ffx\n                    fy[j] -= ffy\n                }\n            }\n        }\n\n        for (let i=0; i<data.length; i++) {\n            let x = data[i].x + fx[i]\n            let y = data[i].y + fy[i]\n            let dx = x - 1\n            let dy = y - 1\n            let tt = Math.atan2(dy,dx)\n            if (tt < 0) { tt += 2*Math.PI }\n            let cat = data[i].category\n            let t0 = categories[cat].t0\n            let t1 = categories[cat].t1\n            let rr = Math.sqrt(dx*dx + dy*dy)\n            let tgap = this.rad/rr\n            if (rr < r1 && rr > r0 && tt > t0+tgap && tt < t1-tgap) {\n                data[i].x = x\n                data[i].y = y\n            }\n        }\n\n    }\n\n    draw ({ width, showLabels = true }) {\n        if (this.count >= this.iterations) {\n            return\n        } else {\n            this.count++\n        }\n\n        let R = 0.5 * width\n        let cx = R\n        let cy = R\n\n        let rr = this.rad * R\n        let innerRadius = this.inner * R\n\n        // let lineThetas = Object.entries(this.categories).reduce((acc,entry) => {\n        //     acc.push(entry[1].t0)\n        //     acc.push(entry[1].t1)\n        //     return acc\n        // }, [])\n\n        d3.select('#plot2').attr('width', width).attr('height', width)\n\n        d3.select('#plot2').selectAll('circle').data(this.data).enter()\n            .append('circle')\n            .attr('cx', d => d.x * R )\n            .attr('cy', d => d.y * R )\n            .attr('r', rr)\n            .attr('class', d => 'hue-' + String(d.hue))\n\n        d3.select('#plot2').selectAll('circle').data(this.data)\n            .transition()\n            .attr('cx', d => d.x * R )\n            .attr('cy', d => d.y * R )\n\n        // d3.select('#plot2').selectAll('line').data(lineThetas).enter()\n        //     .append('line')\n        //     .attr('x1', cx)\n        //     .attr('y1', cy)\n        //     .attr('x2', d => cx + R*Math.cos(d))\n        //     .attr('y2', d => cy + R*Math.sin(d))\n        //     .style('stroke', 'black')\n        //     .style('stroke-width', 2)\n\n        if (showLabels) {\n            let drawArc = d3.arc()\n                .innerRadius(innerRadius*0.3)\n                .outerRadius(innerRadius)\n                .startAngle(d => d[1].t0 + 0.5*Math.PI)\n                .endAngle(d => d[1].t1 + 0.5*Math.PI)\n\n            let arcs = Object.entries(this.categories)\n\n            // d3.select('#plot2').selectAll('path').data(arcs).enter()\n            //     .append('path')\n            //     .attr('d',drawArc)\n            //     .attr('transform', 'translate(' + cx + ',' + cy +')')\n\n            // add labels\n            d3.select('#plot2').selectAll('text.labels').data(arcs).enter()\n                .append('text')\n                .each(function (d) {\n                    let centroid = drawArc.centroid(d)\n                    d3.select(this)\n                        .attr('x', centroid[0] + cx)\n                        .attr('y', centroid[1] + cy)\n                        .attr('dy', '0.33em')\n                        .text(d[0])\n                })\n        }\n\n    }\n\n}\n\nexport default PieHue","\nimport React from 'react'\nimport d3Plot from './d3.js'\n\nclass D3Comp extends React.Component {\n\n    componentDidMount () {\n\n        let data = []\n\n        for (let i=0; i<200; i++)\n          data.push({ category: 'A', hue: 0 })\n\n        for (let i=0; i<600; i++)\n          data.push({ category: 'A', hue: 1 })\n\n        for (let i=0; i<300; i++)\n          data.push({ category: 'B', hue: 0 })\n\n        for (let i=0; i<10; i++)\n          data.push({ category: 'B', hue: 1 })\n\n        this.plot = new d3Plot(data)\n        this.plot.draw({ width: 600, showLabels: true })\n\n        this.interval = setInterval(() => {\n          this.plot.force()\n          this.plot.draw({ width: 600 , showLabels: false})\n        }, 50)\n\n\n    }\n\n    render () {\n        return (\n            <svg id='plot2'></svg>\n        )\n    }\n\n}\n\nexport default D3Comp","import React from 'react';\nimport './App.css';\nimport D3Comp from './d3Comp.js'\n\nfunction App() {\n\n  let data = []\n\n  for (let i=0; i<200; i++)\n    data.push({ category: 0, hue: 0 })\n\n  for (let i=0; i<600; i++)\n    data.push({ category: 0, hue: 1 })\n\n  for (let i=0; i<300; i++)\n    data.push({ category: 1, hue: 0 })\n\n  for (let i=0; i<10; i++)\n    data.push({ category: 1, hue: 1 })\n\n    return (\n    <div className=\"App\">\n      <D3Comp/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}